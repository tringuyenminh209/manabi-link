version: '3.8'

services:
  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: manabi_nginx
    restart: unless-stopped
    ports:
      - "8888:80"
    volumes:
      - ./app:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php
      - mysql
    networks:
      - manabi_network

  # PHP-FPM Service
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: manabi_php
    restart: unless-stopped
    volumes:
      - ./app:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - "DB_HOST=mysql"
      - "DB_PORT=3306"
      - "DB_DATABASE=manabi_link"
      - "DB_USERNAME=manabi"
      - "DB_PASSWORD=123qwecc"
      - "REDIS_HOST=redis"
      - "REDIS_PORT=6379"
    depends_on:
      - mysql
      - redis
    networks:
      - manabi_network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: manabi_mysql
    restart: unless-stopped
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: manabi_link
      MYSQL_USER: manabi
      MYSQL_PASSWORD: 123qwecc
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./docker/data/mysql:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - manabi_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: manabi_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./docker/data/redis:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - manabi_network

  # PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin
    container_name: manabi_phpmyadmin
    restart: always
    ports:
      - "8008:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - mysql
    networks:
      - manabi_network

  # Node Service for NPM commands
  npm:
    image: node:18-alpine
    container_name: manabi_npm
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./app:/var/www/html
    networks:
      - manabi_network
    command: tail -f /dev/null

networks:
  manabi_network:
    driver: bridge